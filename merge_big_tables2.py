import duckdb
import argparse
import os

def merge_big_tables(file1, file2, output, how='left'):
    """
    –ë—ã—Å—Ç—Ä—ã–π merge –¥–≤—É—Ö –±–æ–ª—å—à–∏—Ö parquet —Ç–∞–±–ª–∏—Ü –ø–æ item_id —Å –ø–æ–º–æ—â—å—é DuckDB.
    
    :param file1: –ø—É—Ç—å –∫ –ø–µ—Ä–≤–æ–º—É parquet —Ñ–∞–π–ª—É
    :param file2: –ø—É—Ç—å –∫–æ –≤—Ç–æ—Ä–æ–º—É parquet —Ñ–∞–π–ª—É
    :param output: –ø—É—Ç—å –∫ parquet —Ñ–∞–π–ª—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    :param how: —Ç–∏–ø join ‚Äî left / inner / right / full (default: left)
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    if not os.path.exists(file1):
        raise FileNotFoundError(f"–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {file1}")
    if not os.path.exists(file2):
        raise FileNotFoundError(f"–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {file2}")

    print(f"üì• –ß—Ç–µ–Ω–∏–µ: {file1} ({os.path.getsize(file1)/1e9:.2f} GB)")
    print(f"üì• –ß—Ç–µ–Ω–∏–µ: {file2} ({os.path.getsize(file2)/1e9:.2f} GB)")
    print(f"ü™Ñ –¢–∏–ø –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è: {how}")

    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    con = duckdb.connect()

    # –§–æ—Ä–º–∏—Ä—É–µ–º SQL
    query = f"""
        SELECT *
        FROM '{file1}' t1
        {how.upper()} JOIN '{file2}' t2
        USING (user_id, item_id)
    """

    # –í—ã–ø–æ–ª–Ω—è–µ–º join –∏ —Å—Ä–∞–∑—É –≤—ã–≥—Ä—É–∂–∞–µ–º –≤ parquet
    con.execute(f"""
        COPY ({query})
        TO '{output}'
        (FORMAT PARQUET, COMPRESSION ZSTD);
    """)

    print(f"‚úÖ Merge –∑–∞–≤–µ—Ä—à—ë–Ω. –†–µ–∑—É–ª—å—Ç–∞—Ç: {output}")
    print(f"üì¶ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(output)/1e9:.2f} GB")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Merge two big parquet tables by item_id using DuckDB")
    parser.add_argument("--file1", required=True, help="–ü—É—Ç—å –∫ –ø–µ—Ä–≤–æ–º—É parquet —Ñ–∞–π–ª—É")
    parser.add_argument("--file2", required=True, help="–ü—É—Ç—å –∫–æ –≤—Ç–æ—Ä–æ–º—É parquet —Ñ–∞–π–ª—É")
    parser.add_argument("--output", default="merged.parquet", help="–ü—É—Ç—å –∫ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–º—É parquet —Ñ–∞–π–ª—É")
    parser.add_argument("--how", default="left", choices=["left", "inner", "right", "full"], help="–¢–∏–ø join")

    args = parser.parse_args()
    merge_big_tables(args.file1, args.file2, args.output, args.how)